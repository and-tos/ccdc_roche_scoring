function db_ImportSD, db_ImportMOL2;


// soap server function
global function soap_spec_TemplateDocking [] =
    [
        [
            output_dir: [
            title: 'output_dir',
            type: 'token',
            description: 'Output directory' ],

            ligand_prep_enum: [
            title: 'ligand_prep_enum',
            type: 'int',
            description: 'Enumerate ligand stereocenters' ],

            ligand_prep_prot: [
            title: 'ligand_prep_prot',
            type: 'int',
            description: 'Generate ligand protonation states.' ],

            verbose_output: [
            title: 'verbose_output',
            type: 'int',
            description: 'Write additional output files for RF-PLP scoring.' ],

            template_project: [
            title: 'template_project',
            type: 'token',
            description: 'template_project'],

            flexible_residues: [
            title: 'flexible_residues',
            type: 'token',
            description: 'flexible_residues']
        ],

        [//output
        docked_ligands: [
    	    type: 'token', title: 'ligands', descr: 'SDFile with docked ligands'
    	]
        ],

        [//option
        ]
    ];


global function soap_TemplateDocking [arg, opt]
    // need to change into directory to make sure file is written here
	local tmpdir = tok_cat ['MOE_TMP/', arg.output_dir];
    cd tmpdir;
	print 'Function: soapfcn_TemplateDocking'; // for logging purposes
    local cmd = twrite['/ccdc_roche_scoring/moe/template_docking/docking_workflow.sh {} {} {} {} {}> docking_workflow.out 2> docking_workflow.error', arg.ligand_prep_prot, arg.ligand_prep_enum, arg.template_project, arg.verbose_output, arg.flexible_residues];
    print cmd;
    local SLEEPTIME = 0.5; //minimum time needed for process
    local ekey = exe_open_shell[
    			cmd, [], [], []
    			];
    local exitcode = [];
    //local msg = Message[0, 'Template docking in progress...'];
    while exe_status ekey loop
		sleep SLEEPTIME;
    endloop
    local output_ligands = twrite['{}/docking/best_docking_solutions.sdf', tmpdir];
    if ftype output_ligands === 'file' then
        local temp_pocket_mdb = tok_cat [tmpdir, '/docking/pockets.mdb'];
        cmd = twrite ['chmod 770 {}', tmpdir];
        exe_open_shell [cmd, [], [], []];
        print "Execution on SOAP successful";
        local ret = [docked_ligands: output_ligands];
local info = task_info [];
pr info;
        return ret;
    endif

    return [];
endfunction
